AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Cluster:
    Type: String
    Description: Name of Cluster to host services and tasks
  Domain:
    Type: String
    Description: Domain name for Traefik to use
  TargetGroup:
    Type: String
    Description: TargetGroup for internet traffic

Resources:
  RoleService:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
                  - elasticloadbalancing:DeregisterTargets
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:RegisterInstancesWithLoadBalancer
                  - elasticloadbalancing:RegisterTargets
                  - ec2:Describe*
                  - ec2:AuthorizeSecurityGroupIngress
                Resource: "*"

  RoleTraefik:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-traefik
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecs:*
                  - ecs:ListClusters
                  - ecs:DescribeClusters
                  - ecs:ListTasks
                  - ecs:DescribeTasks
                  - ecs:DescribeContainerInstances
                  - ecs:DescribeTaskDefinition
                  - ec2:DescribeInstances
                Resource: "*"

  ServiceTraefik:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinitionTraefik
      DesiredCount: 0

  TaskDefinitionTraefik:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: andrewgryan/traefik-ecs:latest
          Environment:
            - Name: CLUSTER
              Value: !Ref Cluster
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: DOMAIN
              Value: !Ref Domain
          Name: traefik
          Memory: 32
          PortMappings:
            - ContainerPort: 80
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName
      TaskRoleArn: !Ref RoleTraefik

  ServiceNGINX:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinitionNGINX
      DesiredCount: 1
      Role: !Ref RoleService
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  TaskDefinitionNGINX:
    Type: AWS::ECS::TaskDefinition
    Properties:
      NetworkMode: bridge
      ContainerDefinitions:
        - Image: nginx:latest
          Name: nginx
          Memory: 32
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
          DockerLabels:
            traefik.http.routers.nginx.rule: !Sub Host(`${Domain}`)
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${AWS::StackName}-logs
      RetentionInDays: 14
